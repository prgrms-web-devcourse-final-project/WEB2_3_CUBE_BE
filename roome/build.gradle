plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    // .env 파일을 사용하기 위한 플러그인
    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.8.0'
}

group = 'com.roome'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.mockito:mockito-core'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // H2
    runtimeOnly 'com.h2database:h2'

    // OAuth2 및 Security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // AWS
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.1.1'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Spring Retry
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

}

jar {
    enabled = false
}

bootJar {
    archiveFileName = 'app.jar'
}

springBoot {
    mainClass.set('com.roome.RoomeApplication')
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    systemProperty 'spring.profiles.active', 'test'
}